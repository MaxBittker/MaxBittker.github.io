{"version":3,"sources":["webpack:///./src/components/hradio.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js"],"names":["checkedradio","HRadio","createReactClass","render","this","props","n","flip","type","array","Array","from","keys","className","aria-hidden","style","flexWrap","map","i","key","defaultChecked","onClick","e","thisradio","target","checked","PostLink","post","margin","display","to","frontmatter","path","flexGrow","title","whiteSpace","date","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","id","pageQuery"],"mappings":"iJAGIA,E,iCAEEC,E,MAASC,GAAiB,CAAC,YAAD,SAC9BC,OAD8B,WACpB,IAAD,EACiBC,KAAKC,MAAvBC,EADC,EACDA,EAAGC,EADF,EACEA,KAAMC,EADR,EACQA,KACXC,EAAQC,MAAMC,KAAKD,MAAMJ,GAAGM,QAChC,OACE,yBACEC,UAAU,SACVC,cAAY,OACZC,MAAO,CACLC,SAAUT,EAAO,eAAiB,SAGnCE,EAAMQ,KAAI,SAAAC,GAAC,OACV,2BACEC,IAAKD,EACLV,KAAMA,GAAc,QACpBY,eAAgBF,EAAI,EACpBG,QAAS,SAAAC,GACP,IAAIC,EAAYD,EAAEE,OAIdxB,IAAiBuB,GACnBA,EAAUE,SAAU,EACpBzB,EAAe,MAEfA,EAAeuB,GAGnBR,MACE,YAUCd,O,uFChCAyB,G,UATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,yBAAKZ,MAAO,CAAEa,OAAQ,WACpB,kBAAC,IAAD,CAAMb,MAAO,CAAEc,QAAS,QAAUC,GAAI,IAAMH,EAAKI,YAAYC,MAC3D,uBAAGjB,MAAO,CAAEkB,SAAU,IAAMN,EAAKI,YAAYG,OAC7C,2BAAOnB,MAAO,CAAEoB,WAAY,WAAaR,EAAKI,YAAYK,U,oBCRhE,0CAuBeC,UAjBG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKb,YAAYK,QACvCnB,KAAI,SAAA0B,GAAI,OAAI,kBAAC,EAAD,CAAUxB,IAAKwB,EAAKC,KAAKC,GAAIlB,KAAMgB,EAAKC,UAEvD,OACE,6BACE,kDACCN,IAZP,IAmBaQ,EAAS","file":"component---src-pages-blog-js-6c9c741eea50ac8043eb.js","sourcesContent":["import React from \"react\";\nimport createReactClass from \"create-react-class\";\n\nvar checkedradio;\n\nconst HRadio = createReactClass({\n  render() {\n    let { n, flip, type } = this.props;\n    let array = Array.from(Array(n).keys());\n    return (\n      <div\n        className=\"hradio\"\n        aria-hidden=\"true\"\n        style={{\n          flexWrap: flip ? \"wrap-reverse\" : \"wrap\"\n        }}\n      >\n        {array.map(i => (\n          <input\n            key={i}\n            type={type ? type : \"radio\"}\n            defaultChecked={i % 2}\n            onClick={e => {\n              let thisradio = e.target;\n              // if (thisradio.defaultChecked) {\n              //   checkedradio = thisradio;\n              // }\n              if (checkedradio === thisradio) {\n                thisradio.checked = false;\n                checkedradio = null;\n              } else {\n                checkedradio = thisradio;\n              }\n            }}\n            style={\n              {\n                // cursor: cursors[i % cursors.length]\n              }\n            }\n          />\n        ))}\n      </div>\n    );\n  }\n});\nexport default HRadio;\n","import React from \"react\";\nimport Link from \"gatsby-link\";\nimport HRadio from \"./hradio.js\";\n\nconst PostLink = ({ post }) => (\n  <div style={{ margin: \"0 1em \" }}>\n    <Link style={{ display: \"flex\" }} to={\"/\" + post.frontmatter.path}>\n      <p style={{ flexGrow: 1 }}>{post.frontmatter.title}</p>\n      <small style={{ whiteSpace: \"nowrap\" }}>{post.frontmatter.date}</small>\n    </Link>\n  </div>\n);\n\nexport default PostLink;\n","import React from \"react\";\nimport PostLink from \"../components/post-link\";\n\nimport \"../layouts/index.css\";\nimport \"../pages/example.less\";\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <div>\n      <h1>Writing & Speaking</h1>\n      {Posts}\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}