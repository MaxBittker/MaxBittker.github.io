{"version":3,"sources":["webpack:///./src/pages/art.js"],"names":["__webpack_require__","r","__webpack_exports__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","create_react_class__WEBPACK_IMPORTED_MODULE_5__","create_react_class__WEBPACK_IMPORTED_MODULE_5___default","_art_json__WEBPACK_IMPORTED_MODULE_6__","createReactClass","displayName","propTypes","route","React","PropTypes","object","componentDidMount","_this","this","expand","setInterval","_this$state","state","posts","lim","setState","length","clearInterval","getInitialState","screenshots","data","_","reverse","slice","filter","i","shuffle","componentWillUnmount","render","_this$state2","scs","map","_ref","type","loc","isVideo","a","createElement","key","className","muted","controls","width","autoPlay","loop","name","src","withPrefix","alt","title"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAA,SAAAG,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAE,EAAAX,EAAA,IAAAY,EAAAZ,EAAAM,EAAAK,GAAAE,EAAAb,EAAA,KAUec,cAAiB,CAAAC,YAAA,MAC9BC,UAD8B,WAE5B,MAAO,CAAEC,MAAOC,IAAMC,UAAUC,SAGlCC,kBAL8B,WAKV,IAAAC,EAAAC,KAClBA,KAAKC,OAASC,YAAY,WAAM,IAAAC,EACTJ,EAAKK,MAApBC,EADwBF,EACxBE,MAAOC,EADiBH,EACjBG,IACbP,EAAKQ,SAAS,CAAED,IAAKA,EAAM,IACvBD,EAAMG,OAASF,GACjBG,cAAcV,EAAKE,SAEpB,MAELS,gBAd8B,WAcZ,IACRC,EAAgBC,EAAhBD,YAEJN,EADMQ,IAAEC,QAAQH,EAAYI,SAChBC,OAAO,SAAAC,GAAC,OAAIA,IAE5B,MAAO,CAAEZ,MADTA,EAAQQ,IAAEK,QAAQb,GACFC,IAAK,IAGvBa,qBAtB8B,WAuB5BV,cAAcT,KAAKC,SAGrBmB,OA1B8B,WA0BrB,IAAAC,EACcrB,KAAKI,MAApBC,EADCgB,EACDhB,MAAOC,EADNe,EACMf,IACTgB,EAAMjB,EAAMU,MAAM,EAAGT,GAAKiB,IAAI,SAAAC,EAAgBP,GAAM,IAAnBQ,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,IACrCC,EAAmB,SAATF,EACd,OACExC,EAAA2C,EAAAC,cAAA,OAAKC,IAAKb,EAAGc,UAAW,YACrBJ,EACC1C,EAAA2C,EAAAC,cAAA,SACEG,OAAK,EACLC,UAAQ,EACRC,MAAM,OACNC,UAAQ,EACRC,MAAI,EACJC,KAAK,YACLC,IAAKC,qBAAW,gBAAkBb,KAGpCzC,EAAA2C,EAAAC,cAAA,OACES,IAAKC,qBAAW,gBAAkBb,GAClCc,IAAI,wBAMd,OACEvD,EAAA2C,EAAAC,cAAA,WACE5C,EAAA2C,EAAAC,cAAC1C,EAAAyC,EAAD,CAAQa,MAAM,YACdxD,EAAA2C,EAAAC,cAAA,kCACA5C,EAAA2C,EAAAC,cAAA,OAAKE,UAAU,eAAeT","file":"component---src-pages-art-js-f1c537dc84598414f4e5.js","sourcesContent":["import \"../pages/example.less\";\n\nimport { withPrefix } from \"gatsby-link\";\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport createReactClass from \"create-react-class\";\n\nimport data from \"./art.json\";\n\nexport default createReactClass({\n  propTypes() {\n    return { route: React.PropTypes.object };\n  },\n\n  componentDidMount() {\n    this.expand = setInterval(() => {\n      let { posts, lim } = this.state;\n      this.setState({ lim: lim + 2 });\n      if (posts.length < lim) {\n        clearInterval(this.expand);\n      }\n    }, 2000);\n  },\n  getInitialState() {\n    const { screenshots } = data;\n    let scs = _.reverse(screenshots.slice());\n    let posts = scs.filter(i => i);\n    posts = _.shuffle(posts);\n    return { posts, lim: 9 };\n  },\n\n  componentWillUnmount() {\n    clearInterval(this.expand);\n  },\n\n  render() {\n    let { posts, lim } = this.state;\n    let scs = posts.slice(0, lim).map(({ type, loc }, i) => {\n      let isVideo = type === \".mp4\";\n      return (\n        <div key={i} className={\"art-card\"}>\n          {isVideo ? (\n            <video\n              muted\n              controls\n              width=\"100%\"\n              autoPlay\n              loop\n              name=\"art video\"\n              src={withPrefix(\"/screenshots/\" + loc)}\n            />\n          ) : (\n            <img\n              src={withPrefix(\"/screenshots/\" + loc)}\n              alt=\"generatative art\"\n            />\n          )}\n        </div>\n      );\n    });\n    return (\n      <div>\n        <Helmet title=\"artwork\" />\n        <h1>Visual Artwork Dump:</h1>\n        <div className=\"art-masonry\">{scs}</div>\n      </div>\n    );\n  }\n});\n"],"sourceRoot":""}