{"data":{"site":{"siteMetadata":{"title":"max-bittker"}},"markdownRemark":{"id":"28f9aede-9142-5338-9054-c60a0fde7350","html":"<p><a href=\"sandspiel.club\">Sandspiel</a> is a falling sand game I built in the fall of 2018.</p>\n<p>If you haven’t played a falling sand game before, imagine a virtual chemistry kit. You’re given a painting palette of pixelated solids, liquids, and gasses, and it’s up to you to combine them in interesting ways and discover how they interact.\n<img src=\"https://raw.githubusercontent.com/MaxBittker/sandspiel/master/Screenshot.png\" alt=\"screenshot\">\nI think I loved them so much becuase their mode of play was creative in a way that captured my imagination. Playing with the elements means asking questions, building experiments, and inventing your own games.</p>\n<p>What does “fungus” do?\nLet’s make the coolest volcano!\nCan I build a working toilet?\nDoes anything destroy lava?\nWhat happens if I do <em>this</em>?</p>\n<p>Falling sand games as a system: emergent behavior (element interactions)\nemergent behavior: social community, microculture.</p>\n<p>Three archetypes I remember fondly:</p>\n<p>Empty promises of some reward for voting.\nDon’t Smoke educational demonstrations\nCool volcanos\nBeautiful pixel-art architecture to destroy</p>\n<p>I built this game twice in the past. My first attempt was in pure naive javascript,\nthe second was in lua using the love2d framework.</p>\n<p>Implementing one idea multiple ways really benefited my ability to make better tradeoffs, structure a codebase that I want to work in, and avoid pitfalls. I would strongly recommend the experience to anyone!</p>\n<p>It also made building in rust and lua easier because I had a strong idea of what my datastructures would be and what types of apis I would need to use.</p>\n<p>Archetecture:</p>\n<p>Rust Universe Class</p>\n<p>JS UI</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"></code></pre></div>\n<h3>Javascript:</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> shoulders<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> knees<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> toes<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Making Sandspiel","date":"January 06, 2019"}}},"pageContext":{"slug":"/making-sandspiel/","previous":{"fields":{"slug":"/code-review/"},"frontmatter":{"title":"How to Review Code You Don't Understand"}},"next":{"fields":{"slug":"/post1/"},"frontmatter":{"title":"Thinking about Color (WIP)"}}}}