{"version":3,"sources":["webpack:///component---src-pages-blog-js-f97a38bdd97ddd12bc52.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js"],"names":["webpackJsonp","250","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_gatsbyLink2","PostLink","_ref","post","createElement","to","frontmatter","path","title","date","256","pageQuery","undefined","_postLink","_postLink2","IndexPage","edges","data","allMarkdownRemark","Posts","filter","edge","node","map","key","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAAeP,EAAuBM,GCZrCE,EAAW,SAAAC,GAAA,GAAGC,GAAHD,EAAGC,IAAH,OACfL,GAAAF,QAAAQ,cAAA,WACEN,EAAAF,QAAAQ,cAACJ,EAAAJ,SAAKS,GAAI,IAAMF,EAAKG,YAAYC,MAC9BJ,EAAKG,YAAYE,MADpB,IAC2BV,EAAAF,QAAAQ,cAAA,iBAASD,EAAKG,YAAYG,MADrD,MDmCHlB,GAAQK,QC7BMK,ED8BdX,EAAOC,QAAUA,EAAiB,SAI7BmB,IACA,SAAUpB,EAAQC,EAASC,GAEhC,YAaA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAXvFH,EAAQI,YAAa,EACrBJ,EAAQoB,UAAYC,MEnDrB,IAAAf,GAAAL,EAAA,GFuDKM,EAAUL,EAAuBI,GEtDtCgB,EAAArB,EAAA,KF0DKsB,EAAarB,EAAuBoB,GExDnCE,EAAY,SAAAb,GAIZ,GAFmBc,GAEnBd,EAHJe,KACEC,kBAAqBF,MAGjBG,EAAQH,EACXI,OAAO,SAAAC,GAAA,QAAUA,EAAKC,KAAKhB,YAAYG,OACvCc,IAAI,SAAAF,GAAA,MAAQvB,GAAAF,QAAAQ,cAACU,EAAAlB,SAAS4B,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC,QAEvD,OAAOxB,GAAAF,QAAAQ,cAAA,WAAMe,GFoEd5B,GAAQK,QEjEMmB,CAEFJ","file":"component---src-pages-blog-js-f97a38bdd97ddd12bc52.js","sourcesContent":["webpackJsonp([212839066777427],{\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(86);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar PostLink = function PostLink(_ref) {\n\t  var post = _ref.post;\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      _gatsbyLink2.default,\n\t      { to: \"/\" + post.frontmatter.path },\n\t      post.frontmatter.title,\n\t      \" \",\n\t      _react2.default.createElement(\n\t        \"small\",\n\t        null,\n\t        \"(\",\n\t        post.frontmatter.date\n\t      ),\n\t      \")\"\n\t    )\n\t  );\n\t};\n\t\n\texports.default = PostLink;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 256:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _postLink = __webpack_require__(250);\n\t\n\tvar _postLink2 = _interopRequireDefault(_postLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar IndexPage = function IndexPage(_ref) {\n\t  var edges = _ref.data.allMarkdownRemark.edges;\n\t\n\t  var Posts = edges.filter(function (edge) {\n\t    return !!edge.node.frontmatter.date;\n\t  }) // You can filter your posts based on some criteria\n\t  .map(function (edge) {\n\t    return _react2.default.createElement(_postLink2.default, { key: edge.node.id, post: edge.node });\n\t  });\n\t\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    Posts\n\t  );\n\t};\n\t\n\texports.default = IndexPage;\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-blog-js-f97a38bdd97ddd12bc52.js","import React from \"react\";\nimport Link from \"gatsby-link\";\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={\"/\" + post.frontmatter.path}>\n      {post.frontmatter.title} <small>({post.frontmatter.date}</small>)\n    </Link>\n  </div>\n);\n\nexport default PostLink;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/post-link.js","import React from \"react\";\nimport PostLink from \"../components/post-link\";\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return <div>{Posts}</div>;\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/blog.js"],"sourceRoot":""}