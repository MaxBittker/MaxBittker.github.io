{"version":3,"sources":["webpack:///./src/components/loom.js","webpack:///./src/pages/index.js"],"names":["u","rowHeight","Loom","createReactClass","displayName","getInitialState","mounted","componentDidMount","this","setState","render","height","width","window","innerWidth","innerHeight","state","react_default","a","createElement","rows","Array","from","keys","map","w","raw","Math","random","sum","reduce","b","r","ceil","u2","className","id","patternUnits","d","row","row_sums","values","acc","sums","forEach","v","push","c","key","x","y","fill","style","stroke","Raven","config","release","enviroment","install","Index","loom","React","Component"],"mappings":"iMAuBA,IAAIA,EAAI,EACJC,EAAgB,GAAJD,EAmEDE,QAjEFC,GAAiB,CAAAC,YAAA,OAC5BC,gBAD4B,WAE1B,MAAO,CAAEC,SAAS,IAEpBC,kBAJ4B,WAK1BC,KAAKC,SAAS,CAAEH,SAAS,KAE3BI,OAP4B,WAQ1B,IAAIC,EAAS,IACTC,EAAQ,IAMZ,GALsB,oBAAXC,SACTD,EAAQC,OAAOC,WACfH,EAASE,OAAOE,cAGbP,KAAKQ,MAAMV,QACd,OAAOW,EAAAC,EAAAC,cAAA,YAET,IAAIC,EAAOC,MAAMC,KAAKD,MAAO,EAAIV,EAASV,EAAa,GAAGsB,QAAQC,IAAI,kBA9BxDC,EA+BHb,EAAQZ,EA9BjB0B,EAAML,MAAMC,KAAKD,MAAO,EAAoB,EAAhBM,KAAKC,SAAgB,GAAGL,QAAQC,IAAI,kBAClEG,KAAKC,WAEHC,EAAMH,EAAII,OAAO,SAACZ,EAAGa,GAAJ,OAAUb,EAAIa,IAC1BL,EAAIF,IAAI,SAAAQ,GAAC,OAAIhC,EAAI2B,KAAKM,KAAKD,GAAKP,EAAIzB,EAAI6B,MALnD,IAAkBJ,EACZC,EAGAG,IA6BEK,EAAKlC,EAAoB,EAAhB2B,KAAKC,SAElB,OACEX,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACblB,EAAAC,EAAAC,cAAA,WAASiB,GAAG,QAAQC,aAAa,iBAAiBzB,MAAOZ,EAAGW,OAAQX,GAClEiB,EAAAC,EAAAC,cAAA,QACEmB,EAAC,2CAEGtC,EAFH,KAESA,EAFT,KAEeA,EAFf,kBAGCkC,EAAK,GAHN,KAGWA,EAAK,GAHhB,YAMLjB,EAAAC,EAAAC,cAAA,WACEiB,GAAG,aACHC,aAAa,iBACbzB,MAAOZ,EACPW,OAAQX,GAERiB,EAAAC,EAAAC,cAAA,QACEmB,EAAC,kBACCJ,EAAK,GADN,iCAEQlC,EAAI,GAFZ,KAEiBA,EAAI,GAFrB,qBAGIkC,EAAK,GAHT,WAOJd,EAAKI,IAAI,SAACe,EAAKP,GACd,IAAIQ,EAtEd,SAAcC,GACZ,IAAIC,EAAM,EACNC,EAAO,CAACD,GAKZ,OAJAD,EAAOG,QAAQ,SAAAC,GACbH,GAAOG,EACPF,EAAKG,KAAKJ,KAELC,EA+DgBA,CAAKJ,GACpB,OAAOA,EAAIf,IAAI,SAACC,EAAGsB,GAAJ,OACb9B,EAAAC,EAAAC,cAAA,QACE6B,IAAQhB,EAAL,IAAUe,EACbE,EAAGT,EAASO,GAAK/C,EACjBkD,EAAGlB,EAAI/B,EACPW,MAAOa,EAAIzB,EACXW,OAAQV,EACRkD,KAAI,SAAUxB,KAAKC,SAAW,GAAM,QAAU,cAA1C,IACJwB,MAAO,CAAEC,OAAQ,wDC5E/BC,IAAMC,OAAO,6DAA8D,CACzEC,QAAS,QACTC,WAAY,eACXC,cAEkBC,4FACnBjD,OAAA,WACE,OACEO,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SAEblB,EAAAC,EAAAC,cAACyC,EAAD,WAL2BC,IAAMC","file":"component---src-pages-index-js-f2c88a48164122cb2688.js","sourcesContent":["import React from \"react\";\nimport createReactClass from \"create-react-class\";\n// import { shuffle } from \"lodash\";\n\nfunction sums(values) {\n  let acc = 0;\n  let sums = [acc];\n  values.forEach(v => {\n    acc += v;\n    sums.push(acc);\n  });\n  return sums;\n}\n\nfunction make_row(w) {\n  let raw = Array.from(Array((1 + Math.random() * 8) | 0).keys()).map(() =>\n    Math.random()\n  );\n  let sum = raw.reduce((a, b) => a + b);\n  let vs = raw.map(r => u * Math.ceil(r * (w / u / sum)));\n\n  return vs;\n}\nlet u = 5;\nlet rowHeight = u * 15;\n\nconst Loom = createReactClass({\n  getInitialState() {\n    return { mounted: false };\n  },\n  componentDidMount() {\n    this.setState({ mounted: true });\n  },\n  render() {\n    let height = 2000;\n    let width = 2000;\n    if (typeof window !== \"undefined\") {\n      width = window.innerWidth;\n      height = window.innerHeight;\n    }\n\n    if (!this.state.mounted) {\n      return <div />;\n    }\n    let rows = Array.from(Array((1 + height / rowHeight) | 0).keys()).map(() =>\n      make_row(width / u)\n    );\n    let u2 = u - Math.random() * 3;\n    // let m = 1;\n    return (\n      <svg className=\"loom\">\n        <pattern id=\"hatch\" patternUnits=\"userSpaceOnUse\" width={u} height={u}>\n          <path\n            d={`\n           M-1,1 l2,-2\n           M0,${u} l${u},-${u}\n           M${u2 - 1},${u2 + 1} l2,-2`}\n          />\n        </pattern>\n        <pattern\n          id=\"left-hatch\"\n          patternUnits=\"userSpaceOnUse\"\n          width={u}\n          height={u}\n        >\n          <path\n            d={`\n           M${u2 - 1},-1 l2,2\n           M-1,-1 l${u + 1},${u + 1}\n           M-1,${u2 - 1} l2,2`}\n          />\n        </pattern>\n\n        {rows.map((row, r) => {\n          let row_sums = sums(row);\n          return row.map((w, c) => (\n            <rect\n              key={`${r}+${c}`}\n              x={row_sums[c] * u}\n              y={r * rowHeight}\n              width={w * u}\n              height={rowHeight}\n              fill={`url(#${Math.random() > 0.5 ? \"hatch\" : \"left-hatch\"})`}\n              style={{ stroke: \"none\" }}\n            />\n          ));\n        })}\n      </svg>\n    );\n  }\n});\nexport default Loom;\n","import React from \"react\";\nimport Raven from \"raven-js\";\n// import WebGL from \"../components/webgl.js\";\n\nimport \"./example.less\";\nimport Loom from \"../components/loom.js\";\n\nRaven.config(\"https://00f21757ccfe49a49742d4f9d7f1ab30@sentry.io/1234724\", {\n  release: \"2.0.0\",\n  enviroment: \"production\"\n}).install();\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div className=\"index\">\n        {/* <WebGL /> */}\n        <Loom />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}